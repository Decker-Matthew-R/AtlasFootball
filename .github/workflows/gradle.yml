name: Java CI with Gradle

on:
    push:
    pull_request:
        branches: [ "main" ]

jobs:
    Backend-Testing:
        runs-on: ubuntu-latest
        permissions:
            contents: read
        services:
            postgres:
                image: postgres:16
                ports:
                    - 5433:5432
                env:
                    POSTGRES_USER: atlas_test
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: atlas_test
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

        steps:
            -   uses: actions/checkout@v4
            -   name: Set up JDK 17
                uses: actions/setup-java@v4
                with:
                    java-version: '17'
                    distribution: 'temurin'

            -   name: Clean Test Database Migrations With Flyway
                run: ./gradlew flywayTestDbClean
                env:
                    SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5433/atlas_test
                    SPRING_DATASOURCE_USERNAME: atlas_test
                    SPRING_DATASOURCE_PASSWORD: password

            -   name: Run Test Database Migrations With Flyway
                run: ./gradlew flywayTestDbMigrate
                env:
                    SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5433/atlas_test
                    SPRING_DATASOURCE_USERNAME: atlas_test
                    SPRING_DATASOURCE_PASSWORD: password

            # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
            # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
            -   name: Setup Gradle
                uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

            -   name: Build with Gradle Wrapper
                run: ./gradlew build
                env:
                    SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5433/atlas_test
                    SPRING_DATASOURCE_USERNAME: atlas_test
                    SPRING_DATASOURCE_PASSWORD: password

            -   name: Run Backend Tests with Coverage
                run: ./gradlew test jacocoTestReport jacocoTestCoverageVerification

    Frontend-Testing:
        runs-on: ubuntu-latest
        permissions:
            contents: read
        services:
            postgres:
                image: postgres:16
                ports:
                    - 5433:5432
                env:
                    POSTGRES_USER: atlas_test
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: atlas_test
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

        steps:
            -   uses: actions/checkout@v4
            -   name: Run Frontend Tests
                run: ./gradlew testFrontend

    Journey-Testing:
        runs-on: ubuntu-latest
        permissions:
            contents: read
        services:
            postgres:
                image: postgres:16
                ports:
                    - 5434:5432
                env:
                    POSTGRES_USER: atlas_journey
                    POSTGRES_PASSWORD: password
                    POSTGRES_DB: atlas_journey
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        steps:
            -   uses: actions/checkout@v4

            -   name: Set up JDK 17
                uses: actions/setup-java@v4
                with:
                    java-version: '17'
                    distribution: 'temurin'

            -   name: Clean Journey Database Migrations With Flyway
                run: ./gradlew flywayJourneyTestDbClean
                env:
                    SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5434/atlas_journey
                    SPRING_DATASOURCE_USERNAME: atlas_journey
                    SPRING_DATASOURCE_PASSWORD: password

            -   name: Run Journey Tests
                run: ./gradlew testJourney

    Secret-Scanning:
        runs-on: ubuntu-latest
        permissions:
            contents: read

        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - uses: gitleaks/gitleaks-action@v2
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                GITLEAKS_ENABLE_UPLOAD_ARTIFACT: false
                GITLEAKS_CONFIG: .gitleaks.toml


    CodeQL-Analysis:
        name: CodeQL Analysis
        runs-on: ubuntu-latest
        permissions:
            actions: read
            contents: read
            security-events: write

        strategy:
            fail-fast: false
            matrix:
                language: [ 'java', 'javascript', 'actions' ]
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v4

            -   name: Initialize CodeQL
                uses: github/codeql-action/init@v3
                with:
                    languages: ${{ matrix.language }}

            -   name: Set up JDK 17
                if: matrix.language == 'java'
                uses: actions/setup-java@v4
                with:
                    java-version: '17'
                    distribution: 'temurin'

            -   name: Setup Gradle
                if: matrix.language == 'java'
                uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582

            -   name: Autobuild
                uses: github/codeql-action/autobuild@v3

            -   name: Perform CodeQL Analysis
                uses: github/codeql-action/analyze@v3
                with:
                    category: "/language:${{matrix.language}}"



    Dependency-Submission-Scan:
        runs-on: ubuntu-latest
        permissions:
            contents: write
            actions: write

        steps:
            -   uses: actions/checkout@v4
            -   name: Set up JDK 17
                uses: actions/setup-java@v4
                with:
                    java-version: '17'
                    distribution: 'temurin'

            # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
            # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
            -   name: Generate and submit dependency graph
                uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

